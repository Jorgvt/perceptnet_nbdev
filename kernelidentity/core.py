# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['KernelIdentity']

# Cell
import numpy as np
import tensorflow as tf
from tensorflow.keras import layers

# Cell

class KernelIdentity(tf.keras.initializers.Initializer):
    """
    Custom initializer to allow the initialization of convolutional 2D kernels
    as identity matrixes for Conv2D layers in Keras.
    """
    def __init__(self, gain=1):
        self.gain = gain

    def __call__(self, shape, dtype=None):
        """
        shape has the form [Kx, Ky, Cin, Cout]
        """
        identity_matrix = tf.eye(shape[0])*self.gain
        identity_matrix = tf.expand_dims(identity_matrix, axis=-1)
        identity_matrix = tf.expand_dims(identity_matrix, axis=-1)
        identity_matrix = tf.repeat(identity_matrix, shape[2], axis=-2)
        identity_matrix = tf.repeat(identity_matrix, shape[3], axis=-1)
        return identity_matrix

    def get_config(self):
        return {'gain':self.gain}